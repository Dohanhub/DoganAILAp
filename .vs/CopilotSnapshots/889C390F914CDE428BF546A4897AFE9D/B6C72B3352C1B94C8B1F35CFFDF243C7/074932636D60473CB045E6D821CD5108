"""
DoganAI Compliance Kit - Unified Production Application
Advanced compliance management platform with modern architecture

This replaces all previous main.py files with a unified, production-ready application.
Features:
- FastAPI backend with comprehensive Saudi compliance frameworks
- Modern React frontend (replacing Streamlit)
- Real PostgreSQL database integration
- Enterprise security and monitoring
- Arabic/English internationalization
- Mobile-responsive design
"""

import os
import sys
import logging
from pathlib import Path

# Add src to Python path
src_path = Path(__file__).parent / "src"
sys.path.insert(0, str(src_path))

# Configure logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def main():
    """Main application entry point"""
    
    # Check if this is the old main.py being called
    script_name = Path(__file__).name
    if script_name == "main.py":
        logger.info("🔄 Legacy main.py detected - redirecting to unified application")
        
        # Check if unified application exists
        unified_app = Path(__file__).parent / "main_unified.py"
        if unified_app.exists():
            logger.info("✅ Starting unified application...")
            # Execute the unified application
            import subprocess
            subprocess.run([sys.executable, str(unified_app)] + sys.argv[1:])
            return
        else:
            logger.warning("❌ Unified application not found, falling back to basic mode")
    
    # Fallback: Start basic FastAPI application
    try:
        from src.core.app import create_app
        import uvicorn
        
        app = create_app()
        
        # Get configuration
        host = os.getenv("HOST", "0.0.0.0")
        port = int(os.getenv("PORT", 8000))
        environment = os.getenv("ENVIRONMENT", "development")
        
        logger.info(f"🚀 Starting DoganAI Compliance Kit API")
        logger.info(f"🌐 Server: http://{host}:{port}")
        logger.info(f"📚 Docs: http://{host}:{port}/docs")
        logger.info(f"🏗️ Environment: {environment}")
        
        # Run the server
        uvicorn.run(
            app,
            host=host,
            port=port,
            log_level="info",
            access_log=True,
            reload=environment == "development"
        )
        
    except ImportError as e:
        logger.error(f"❌ Failed to import application: {e}")
        logger.info("🔧 Please run: python consolidate_project.py")
        sys.exit(1)
    except Exception as e:
        logger.error(f"❌ Failed to start application: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()