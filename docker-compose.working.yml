services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: doganai-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=compliance_kit
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: doganai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: doganai-api
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/compliance_kit
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=dev-secret-key-change-in-production
      - LOG_LEVEL=INFO
      - APP_TIMEZONE=UTC
      - DISPLAY_TIMEZONE=Asia/Riyadh
      - ALLOWED_ORIGINS=http://localhost:3001,http://127.0.0.1:3001
    volumes:
      - ./app/uploads:/app/app/uploads
      - ./app/scraped:/app/app/scraped
    ports:
      - "8010:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health', timeout=2)"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web Frontend
  web:
    image: node:20-alpine
    container_name: doganai-web
    working_dir: /workspace
    environment:
      - NEXT_PUBLIC_API_BASE=http://api:8000
      - NODE_ENV=development
    volumes:
      - ./:/workspace
      - /workspace/node_modules
    command: sh -lc "corepack enable && corepack prepare pnpm@9 --activate && pnpm -v && pnpm -w install && pnpm -w run tokens:build && pnpm --filter @apps/web dev -p 3001 --host 0.0.0.0"
    ports:
      - "3001:3001"
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  redis_data:

networks:
  default:
    name: doganai-network
