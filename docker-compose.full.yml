version: '3.9'

services:
  db:
    image: postgres:15-alpine
    container_name: doganai-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-doganai}
      - POSTGRES_USER=${POSTGRES_USER:-doganai}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-changeme}
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U ${POSTGRES_USER:-doganai} -d ${POSTGRES_DB:-doganai}"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:7-alpine
    container_name: doganai-redis
    ports:
      - "6379:6379"

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER:-doganai}:${POSTGRES_PASSWORD:-changeme}@db:5432/${POSTGRES_DB:-doganai}
    depends_on:
      db:
        condition: service_healthy
    command: ["alembic","upgrade","head"]

  seed:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER:-doganai}:${POSTGRES_PASSWORD:-changeme}@db:5432/${POSTGRES_DB:-doganai}
      - ENABLE_ADMIN_SEED=true
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin@example.com}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin123}
      - SEED_DATASET_DIR=/seed
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_started
    volumes:
      - ./dataset:/seed:ro
    command: ["python","-m","app.seed"]

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: doganai-api
    env_file:
      - .env
    environment:
      - DATABASE_URL=postgresql+psycopg2://${POSTGRES_USER:-doganai}:${POSTGRES_PASSWORD:-changeme}@db:5432/${POSTGRES_DB:-doganai}
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-http://localhost:3001}
      - OTEL_ENABLED=${OTEL_ENABLED:-false}
      - OTEL_EXPORTER_OTLP_ENDPOINT=${OTEL_EXPORTER_OTLP_ENDPOINT:-http://otel-collector:4318}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      migrate:
        condition: service_started
    volumes:
      - ./app/uploads:/app/app/uploads
      - ./app/scraped:/app/app/scraped
    ports:
      - "8010:8000"

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: doganai-web
    environment:
      - NEXT_PUBLIC_API_BASE=http://api:8000
    ports:
      - "3001:3001"
    depends_on:
      - api
      - prometheus
      - grafana

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.retention.time=15d
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - api

  grafana:
    image: grafana/grafana:10.4.5
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "3002:3000"
    depends_on:
      - prometheus

  otel-collector:
    image: otel/opentelemetry-collector:0.95.0
    container_name: otel-collector
    command: ["--config=/etc/otel/config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel/config.yaml:ro
    ports:
      - "4318:4318"
      - "4317:4317"

  jaeger:
    image: jaegertracing/all-in-one:1.52
    container_name: jaeger
    ports:
      - "16686:16686"

volumes:
  db_data:
