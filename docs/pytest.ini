# DoganAI Compliance Kit - Pytest Configuration
# This file configures pytest for comprehensive testing with coverage integration

[tool:pytest]
# Test discovery patterns
python_files = test_*.py *_test.py tests.py
python_classes = Test* *Tests
python_functions = test_*

# Test directories
testpaths = tests

# Minimum version
minversion = 6.0

# Add current directory to Python path
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=engine
    --cov=improvements
    --cov=ui
    --cov=.
    --cov-report=html:coverage_html_report
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-report=lcov:coverage.lcov
    --cov-report=term-missing
    --cov-branch
    --cov-fail-under=80
    --html=test_report.html
    --self-contained-html
    --junitxml=test_results.xml
    --maxfail=10
    --durations=10
    --color=yes

# Markers for test categorization
markers =
    unit: Unit tests
    integration: Integration tests
    e2e: End-to-end tests
    api: API tests
    database: Database tests
    cache: Cache/Redis tests
    security: Security tests
    performance: Performance tests
    slow: Slow running tests
    fast: Fast running tests
    smoke: Smoke tests
    regression: Regression tests
    compliance: Compliance tests
    monitoring: Monitoring tests
    mobile: Mobile/PWA tests
    coverage: Coverage tests
    critical: Critical functionality tests
    optional: Optional feature tests

# Filters for warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning
    ignore::ResourceWarning
    error::pytest.PytestUnraisableExceptionWarning

# Test timeout (in seconds)
timeout = 300

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Log file configuration
log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Capture configuration
console_output_style = progress

# Doctest configuration
doctest_optionflags = NORMALIZE_WHITESPACE IGNORE_EXCEPTION_DETAIL ELLIPSIS

# Collection configuration
collect_ignore = 
    setup.py
    env
    venv
    .tox
    build
    dist
    node_modules
    .git
    .vs
    .local
    attached_assets
    benchmarks
    compose
    db
    docs
    external_modules
    i18n
    infra
    init-scripts
    k8s
    locales
    mappings
    microservices
    monitoring
    policies
    redis-config
    schemas
    scripts
    tools
    vendors